server {
    # в этой строке серверу nginx указано обрабатывать запросы,
    # поступившие на 80-ый порт сервера
    listen 80;
    # Список IP, запросы к которым должен обрабатывать nginx
    # В этом уроке проект разворачивается локально, поэтому nginx
    # должен обрабатывать запросы к 127.0.0.1.
    # Если вы планируете разворачивать контейнеры на удалённом сервере,
    # здесь должен быть указан IP или доменное имя этого сервера
    server_name 127.0.0.1;
    # для того, чтобы скрыть версию сервера nginx
    # на страницах ошибок
    server_tokens off;

    # ГОТОВЫЕ LOCATION
    # Cогласно ТЗ должна быть настроена раздача статики и медиа:
    # Настройка location/static:
    # запросы к адресу /static/ будут перенаправлены
    # в директорию /var/html/static/
    location /static/ {
        root /var/html/;
    }
    # Настройка location/media:
    # запросы к адресу /media/ будут перенаправлены
    # в директорию /var/html/media/
    location /media/ {
        root /var/html/;
    }

    # В свою очередь Django-приложение ожидает запросы
    # на порт 8000 контейнера backend
    # то есть, если будет запрос главной страницы, то nginx
    # перенаправит этот запрос на http://backend:8000
    # nginx выступает в роли прокси сервера - т.е не обрабатывает запрос сам
    # а перенаправляет его Gunicorn(а он на 8000-ом)
    location / {
        proxy_pass http://backend:8000;
    }

    # Cогласно ТЗ Django-админка работает только через Gunicorn
    # если будет запрос на админ-страницу, то nginx перенаправит
    # такой запрос к  контейнеру с Gunicorn
    #т.е на http://backend:8000/admin/
    location /admin/ {
        proxy_pass http://backend:8000/admin/;
    }

     # Также согласно ТЗ если поступит запрос к api,
    # то nginx опять перенаправит этот запрос к Gunicorn
    # в контейнер backend
    location /api/ {
        proxy_pass http://backend:8000;
    }






    #????????
    # если поступит запрос на апишную документацию
    # (т.е необходимо вернуть статические файлы)
    # nginx сам обработает этот запрос
    # root-каталог находится по адресу /usr/share/nginx/html/
    # все файлы, которые находятся в нем автоматически обслуживаются сервером
    location /api/docs/ {
        root /usr/share/nginx/html;
        # конструкция try_files показывает, что при поступлении запроса
        # на адрес из location(т.е /api/docs/), то nginx сначала ищет файл в каталоге /api/docs/
        # а если не находит там нужной информации для ответа клиенту, то будет искать в redoc/html
        # если ответ не будет найден ни там, ни там, то вернется 404 -не найден
        # а поскольку в томах указан usr/share/nginx/html/api/docs/,
        # то именно по этому адресу и будет получена нужная инфо для ответа
        try_files $uri $uri/redoc.html;
    }



    # настроить переадресацию с фронтенда на Gunicorn
}
